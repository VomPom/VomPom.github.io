{"data":{"index":1,"total":1,"posts":[{"title":"扇形等分-突然想到的一个数学问题","slug":"扇形等分-突然想到的一个数学问题","date":"2020-09-01T07:13:00.000Z","updated":"2025-05-20T11:46:57.000Z","comments":true,"url":"2020/09/01/扇形等分-突然想到的一个数学问题/","excerpt":"<p>note:博客有可能会因为一些 markdown 兼容性不支持，可以查看：<br><a href=\"https://www.douban.com/note/776327336/\">https://www.douban.com/note/776327336/</a></p>\n<p>如图所示，今天突然产生一个想法，如何对扇形进行非角度的平分，数学语言表达的话：我们有一角度为θ的扇形，已知半径为R,我们在R1、R2、R3…..Rn-1处对扇形进行n次分割，使得划分之后的部分面积相等，即S1&#x3D;S2&#x3D;S3….Sn-1&#x3D;Sn，求R之间的关系表达式。</p>\n<img src=\"https://cdn.julis.wang/blog/img/1521743510550.jpg\">\n<p>对于每个区域有：<br>$$<br>f(1)&#x3D;\\frac{ πθ(R_1)^2} {360}<br>$$</p>\n<p>$$<br>f(2)&#x3D;\\frac{ πθ(R_2)^2} {360} - f(1) &#x3D; \\frac{ πθ(R_2)^2} {360} - \\frac{ πθ(R_1)^2} {360}<br>$$</p>\n<p>$$<br>f(3)&#x3D;\\frac{ πθ(R_3)^2} {360} - f(2) &#x3D;  \\frac{ πθ(R_3)^2} {360} - \\frac{ πθ(R_2)^2} {360}<br>$$</p>\n<p>$$<br>……<br>$$</p>\n<p>$$<br>f(n)&#x3D;\\frac{ πθ(R_n)^2} {360}- f(n) &#x3D;  \\frac{ πθ(R_n)^2} {360} - \\frac{ πθ(R_{n-1})^2} {360}<br>$$<br>对于<br>$$<br>f(R_n)-f(R_{n-1}) &#x3D; \\frac{ πθ(R_n)^2} {360} - \\frac{ πθ(R_{n-1})^2} {360}<br>$$<br>由于<br>$$<br>f(R_1)&#x3D;f(R_2)&#x3D;f(R_3)……&#x3D;f(R_{n-1})&#x3D;f(R_n)<br>$$<br>即<br>$$<br>\\frac{ πθ(R_1)^2} {360}&#x3D;\\frac{ πθ(R_2)^2} {360} - \\frac{ πθ(R_1)^2} {360} &#x3D;\\frac{ πθ(R_3)^2} {360} - \\frac{ πθ(R_2)^2} {360} ……&#x3D; \\frac{ πθ(R_n)^2} {360} - \\frac{ πθ(R_{n-1})^2} {360}<br>$$<br>推出<br>$$<br>R_1^2&#x3D;R_2^2-R_1^2  \\longrightarrow R_2 &#x3D; \\frac  {R_1} {\\sqrt{2}}<br>$$</p>\n<p>$$<br>R_2^2&#x3D;R_3^2-R_2^2  \\longrightarrow R_3 &#x3D; \\frac  {R_2} {\\sqrt{2}} &#x3D;\\frac  {R_1} {\\sqrt{2} ^2}<br>$$</p>\n<p>$$<br>R_4 &#x3D; \\frac  {R_1} {\\sqrt{2} ^3}<br>\\<br>$$</p>\n<p>$$<br>……<br>$$</p>\n<p>$$<br>R_n&#x3D; \\frac  {R_1} {\\sqrt{2} ^{n-1}}<br>$$</p>\n<p>$$<br>对于R_1有\\frac{ πθ(R_1)^2} {360} &#x3D; \\frac{ πθ(R_n)^2} {360n} \\longrightarrow R_1&#x3D; \\frac R {\\sqrt {n}}<br>$$</p>\n<p>$$<br>Rn &#x3D;\\frac R {\\sqrt {n}({\\sqrt{2}) ^{n-1}} }<br>$$</p>\n<img src=\"https://cdn.julis.wang/blog/img/dc37c754ce6f4fd1ae224ac2a40416c0.png\">\n<p>从上的公式推导可以看出，对于“扇形”的平分也可以推广到圆的平分上面去，因为从公式中我们看到θ已经被约掉了。从晚上六七点想问题，到下班回家后，推导到了十一点，出来了结论，感觉还是蛮有趣的，遂记录一笔。</p>\n","cover":null,"images":["https://cdn.julis.wang/blog/img/1521743510550.jpg","https://cdn.julis.wang/blog/img/dc37c754ce6f4fd1ae224ac2a40416c0.png"],"content":"<p>note:博客有可能会因为一些 markdown 兼容性不支持，可以查看：<br><a href=\"https://www.douban.com/note/776327336/\">https://www.douban.com/note/776327336/</a></p>\n<p>如图所示，今天突然产生一个想法，如何对扇形进行非角度的平分，数学语言表达的话：我们有一角度为θ的扇形，已知半径为R,我们在R1、R2、R3…..Rn-1处对扇形进行n次分割，使得划分之后的部分面积相等，即S1&#x3D;S2&#x3D;S3….Sn-1&#x3D;Sn，求R之间的关系表达式。</p>\n<img src=\"https://cdn.julis.wang/blog/img/1521743510550.jpg\">\n<p>对于每个区域有：<br>$$<br>f(1)&#x3D;\\frac{ πθ(R_1)^2} {360}<br>$$</p>\n<p>$$<br>f(2)&#x3D;\\frac{ πθ(R_2)^2} {360} - f(1) &#x3D; \\frac{ πθ(R_2)^2} {360} - \\frac{ πθ(R_1)^2} {360}<br>$$</p>\n<p>$$<br>f(3)&#x3D;\\frac{ πθ(R_3)^2} {360} - f(2) &#x3D;  \\frac{ πθ(R_3)^2} {360} - \\frac{ πθ(R_2)^2} {360}<br>$$</p>\n<p>$$<br>……<br>$$</p>\n<p>$$<br>f(n)&#x3D;\\frac{ πθ(R_n)^2} {360}- f(n) &#x3D;  \\frac{ πθ(R_n)^2} {360} - \\frac{ πθ(R_{n-1})^2} {360}<br>$$<br>对于<br>$$<br>f(R_n)-f(R_{n-1}) &#x3D; \\frac{ πθ(R_n)^2} {360} - \\frac{ πθ(R_{n-1})^2} {360}<br>$$<br>由于<br>$$<br>f(R_1)&#x3D;f(R_2)&#x3D;f(R_3)……&#x3D;f(R_{n-1})&#x3D;f(R_n)<br>$$<br>即<br>$$<br>\\frac{ πθ(R_1)^2} {360}&#x3D;\\frac{ πθ(R_2)^2} {360} - \\frac{ πθ(R_1)^2} {360} &#x3D;\\frac{ πθ(R_3)^2} {360} - \\frac{ πθ(R_2)^2} {360} ……&#x3D; \\frac{ πθ(R_n)^2} {360} - \\frac{ πθ(R_{n-1})^2} {360}<br>$$<br>推出<br>$$<br>R_1^2&#x3D;R_2^2-R_1^2  \\longrightarrow R_2 &#x3D; \\frac  {R_1} {\\sqrt{2}}<br>$$</p>\n<p>$$<br>R_2^2&#x3D;R_3^2-R_2^2  \\longrightarrow R_3 &#x3D; \\frac  {R_2} {\\sqrt{2}} &#x3D;\\frac  {R_1} {\\sqrt{2} ^2}<br>$$</p>\n<p>$$<br>R_4 &#x3D; \\frac  {R_1} {\\sqrt{2} ^3}<br>\\<br>$$</p>\n<p>$$<br>……<br>$$</p>\n<p>$$<br>R_n&#x3D; \\frac  {R_1} {\\sqrt{2} ^{n-1}}<br>$$</p>\n<p>$$<br>对于R_1有\\frac{ πθ(R_1)^2} {360} &#x3D; \\frac{ πθ(R_n)^2} {360n} \\longrightarrow R_1&#x3D; \\frac R {\\sqrt {n}}<br>$$</p>\n<p>$$<br>Rn &#x3D;\\frac R {\\sqrt {n}({\\sqrt{2}) ^{n-1}} }<br>$$</p>\n<img src=\"https://cdn.julis.wang/blog/img/dc37c754ce6f4fd1ae224ac2a40416c0.png\">\n<p>从上的公式推导可以看出，对于“扇形”的平分也可以推广到圆的平分上面去，因为从公式中我们看到θ已经被约掉了。从晚上六七点想问题，到下班回家后，推导到了十一点，出来了结论，感觉还是蛮有趣的，遂记录一笔。</p>\n","categories":[{"name":"算法研究","slug":"算法研究","api":"api/categories/算法研究.json"}],"tags":[{"name":"数学","slug":"数学","api":"api/tags/数学.json"}],"api":"api/posts/2020/09/01/扇形等分-突然想到的一个数学问题.json"},{"title":"《美丽的数学》-有趣的数学","slug":"《美丽的数学》-有趣的数学","date":"2020-07-25T15:07:00.000Z","updated":"2025-05-20T11:46:57.000Z","comments":true,"url":"2020/07/25/《美丽的数学》-有趣的数学/","excerpt":"<p>数学有趣而美妙。书名《美丽的数学》，封面设计得非常的棒，简单优美的线条组合组成了这一蜗牛壳形状，让我们还没有翻开书就已经看到了数学的美丽。这本书看的时间不太长，因为有很多内容已经比较熟悉了，比如斐波那契数列、费马、概率相关。不过更很多内容，让人很着迷。</p>\n<h4 id=\"一个奇迹般的等式\"><a href=\"#一个奇迹般的等式\" class=\"headerlink\" title=\"一个奇迹般的等式\"></a>一个奇迹般的等式</h4><p>我们都知道数学中有这样几个数字：<br>$$<br>\\pi  \\ \\ \\ e  \\ \\  i<br>$$<br>但你可知道他们之间也有一个等式关系：<br>$$<br>e^{i\\pi} + 1 &#x3D; 0<br>$$<br>这个方程真的很震撼，有一种得到“统一”的感觉，就像麦克斯韦<a href=\"https://baike.baidu.com/item/%E7%94%B5%E7%A3%81%E7%90%86%E8%AE%BA\">电磁理论</a>建立以后，光学也变成了电磁学的一个分支了，电学、磁学和光学得到了统一。看似没有关联的数字，但他们之间存在着这样的联系，就这一个简单的公式就能把数学中最常用的五个数学符号给统一起来了，不得不服气。</p>\n<h4 id=\"阶乘\"><a href=\"#阶乘\" class=\"headerlink\" title=\"阶乘\"></a>阶乘</h4><p>阶乘我们都很熟悉，也都知道该怎么去计算阶乘，公式很简单：<br>$$<br>N!&#x3D;1×2×3×…×(N-1)×N<br>$$<br>如果我们想计算1000！的阶乘呢？对于程序员来说，总是想到用代码去实习，代码大致这样：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">factorial</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        j *= i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> j;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但是对于1000！这样一个很大数，最终得到的结果是很大的，对于这样的代码的话，int绝对已经满足不了了，哪怕是long,long long int,但是暂且不考虑数据类型的容量。计算机在计算的时候，过程中会进行大量的运算，消耗了大量的性能，但我们最终只是需要一个结果值，而过程中的数据就变得不那么重要了，那么有没有简单的计算方式呢？当然有！又是一个神奇的公式：<br>$$<br>N!\\approx \\sqrt{2\\pi N} ( \\frac N　e)^N<br>$$<br>代码变成：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">ans=(<span class=\"type\">int</span>)(log10((<span class=\"number\">2</span>*PI*n))/<span class=\"number\">2</span>+n*log10((n/e))+<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n\n<p>这样的代码相对而言计算的性能会小很多，虽然公式只是取到一个近似值，误差值在N越大的时候误差越小，在N&#x3D;1000的时候与真实数据的误差已经小于0.01%了，这对于进行大数据很有帮助。</p>\n<h5 id=\"对于0的阶乘等于1的疑问\"><a href=\"#对于0的阶乘等于1的疑问\" class=\"headerlink\" title=\"对于0的阶乘等于1的疑问\"></a>对于0的阶乘等于1的疑问</h5><p>书中关于0的阶乘的证明有个疑问，通过公式:<br>$$<br>N!&#x3D;N*(N-1)!<br>$$<br>N为自然数大于等于0</p>\n<p>因为1！&#x3D;1，根据公式有:<br>$$<br>1!&#x3D;1*0!<br>$$<br>推出0！&#x3D;1，这样看似乎没有问题</p>\n<p>然而将N&#x3D;0再带入公式:<br>$$<br>0!&#x3D; 0*(-1)!<br>$$<br>左边等于1，右边由于0乘以任何数都为0的情况下那么右边为0,左右则矛盾冲突了，那么利用N!&#x3D;N*(N-1)!来推导0！就有一定的局限性。</p>\n<h4 id=\"非传递性骰子\"><a href=\"#非传递性骰子\" class=\"headerlink\" title=\"非传递性骰子\"></a>非传递性骰子</h4><p>对于上面的内容的话，都是一些比较纯数学公式的，但这一节的内容好像与我们的生活有那么一些关系的，说实话这一节真的有点出人意料的，让我有一种怀疑人生的感觉。现在有三颗骰子A B C，每颗骰子上面的数字并不是 1 2 3 4 5 6，而是一些特定的数字比如我们定义这样三个骰子，有六面，每一面有不同的数字，三个骰子的数字都不一样，如下图</p>\n<table>\n<thead>\n<tr>\n<th>骰子</th>\n<th>一</th>\n<th>二</th>\n<th>三</th>\n<th>四</th>\n<th>五</th>\n<th>六</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>A</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>12</td>\n<td>16</td>\n<td>17</td>\n</tr>\n<tr>\n<td>B</td>\n<td>5</td>\n<td>6</td>\n<td>7</td>\n<td>8</td>\n<td>9</td>\n<td>18</td>\n</tr>\n<tr>\n<td>C</td>\n<td>1</td>\n<td>10</td>\n<td>12</td>\n<td>13</td>\n<td>14</td>\n<td>15</td>\n</tr>\n</tbody></table>\n<p>如果让你选这三个骰子中的一个去参与“赌博”，你会选哪一个呢？对于A骰子和B骰子，通过列表格我们可以知道：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>12</th>\n<th>16</th>\n<th>17</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>5</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>A</td>\n<td>A</td>\n<td>A</td>\n</tr>\n<tr>\n<td>6</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>A</td>\n<td>A</td>\n<td>A</td>\n</tr>\n<tr>\n<td>7</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>A</td>\n<td>A</td>\n<td>A</td>\n</tr>\n<tr>\n<td>8</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>A</td>\n<td>A</td>\n<td>A</td>\n</tr>\n<tr>\n<td>9</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>A</td>\n<td>A</td>\n<td>A</td>\n</tr>\n<tr>\n<td>18</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n</tr>\n</tbody></table>\n<p>可以知道A获胜的概率也就是 15&#x2F;36 约等于 42%，B赢的概率会是：58%。 那么你肯定会选择B，因为它赢的概率会大一点。我们用相同的手段处理骰子B和C得到的的数据：B赢的概率是 11&#x2F;36 约等于 31%，C赢的概率是25&#x2F;36约等于 百分之69。那么你肯定会选择骰子C。</p>\n<p>好像在这样的三个骰子里面，A“最差”，C“最好”，然而对于A和C，C赢的概率真的会高一些么？！如果你继续通过上面列表格的方式你会发现，A和C比较的话，A赢的概率是 21&#x2F;36约等于 58%，C赢的概率是15&#x2F;36约等于42%。</p>\n<p>相信你如果不是有对概率论有学习过的话，一上来肯定是不相信的，然而事实就是这样的。这是因为A与B、B与C、A与C相互之间的比较产生的<strong>基本事件空间</strong>是不一样的，比如A和B比较是(2,5)(2,6)等36个基本事件，A和C又是另外36个基本事件，所以这个概率大小也不具有传递性。</p>\n<h5 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h5><p>对于这本书，我本以为会介绍这个的方程：<br>$$<br>r &#x3D;a( 1 - sin θ)<br>$$<br>因为这个方程有一个美丽的图形，而方程背后又有一个美丽的故事，感觉内容太适合这本书了，不知道为什么没有加入进去。</p>\n<p>总之这本书大部分内容都是初等数学相关的知识，看起来并不是特别的费劲，但是很多平常有经常用过的数或者公式都有其深深的内涵所在，当你对其中的原理证明进行了相关的了解之后，你会发出感叹，原来数学是如此的有趣美丽。</p>\n","cover":null,"images":[],"content":"<p>数学有趣而美妙。书名《美丽的数学》，封面设计得非常的棒，简单优美的线条组合组成了这一蜗牛壳形状，让我们还没有翻开书就已经看到了数学的美丽。这本书看的时间不太长，因为有很多内容已经比较熟悉了，比如斐波那契数列、费马、概率相关。不过更很多内容，让人很着迷。</p>\n<h4 id=\"一个奇迹般的等式\"><a href=\"#一个奇迹般的等式\" class=\"headerlink\" title=\"一个奇迹般的等式\"></a>一个奇迹般的等式</h4><p>我们都知道数学中有这样几个数字：<br>$$<br>\\pi  \\ \\ \\ e  \\ \\  i<br>$$<br>但你可知道他们之间也有一个等式关系：<br>$$<br>e^{i\\pi} + 1 &#x3D; 0<br>$$<br>这个方程真的很震撼，有一种得到“统一”的感觉，就像麦克斯韦<a href=\"https://baike.baidu.com/item/%E7%94%B5%E7%A3%81%E7%90%86%E8%AE%BA\">电磁理论</a>建立以后，光学也变成了电磁学的一个分支了，电学、磁学和光学得到了统一。看似没有关联的数字，但他们之间存在着这样的联系，就这一个简单的公式就能把数学中最常用的五个数学符号给统一起来了，不得不服气。</p>\n<h4 id=\"阶乘\"><a href=\"#阶乘\" class=\"headerlink\" title=\"阶乘\"></a>阶乘</h4><p>阶乘我们都很熟悉，也都知道该怎么去计算阶乘，公式很简单：<br>$$<br>N!&#x3D;1×2×3×…×(N-1)×N<br>$$<br>如果我们想计算1000！的阶乘呢？对于程序员来说，总是想到用代码去实习，代码大致这样：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">factorial</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        j *= i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> j;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但是对于1000！这样一个很大数，最终得到的结果是很大的，对于这样的代码的话，int绝对已经满足不了了，哪怕是long,long long int,但是暂且不考虑数据类型的容量。计算机在计算的时候，过程中会进行大量的运算，消耗了大量的性能，但我们最终只是需要一个结果值，而过程中的数据就变得不那么重要了，那么有没有简单的计算方式呢？当然有！又是一个神奇的公式：<br>$$<br>N!\\approx \\sqrt{2\\pi N} ( \\frac N　e)^N<br>$$<br>代码变成：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">ans=(<span class=\"type\">int</span>)(log10((<span class=\"number\">2</span>*PI*n))/<span class=\"number\">2</span>+n*log10((n/e))+<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n\n<p>这样的代码相对而言计算的性能会小很多，虽然公式只是取到一个近似值，误差值在N越大的时候误差越小，在N&#x3D;1000的时候与真实数据的误差已经小于0.01%了，这对于进行大数据很有帮助。</p>\n<h5 id=\"对于0的阶乘等于1的疑问\"><a href=\"#对于0的阶乘等于1的疑问\" class=\"headerlink\" title=\"对于0的阶乘等于1的疑问\"></a>对于0的阶乘等于1的疑问</h5><p>书中关于0的阶乘的证明有个疑问，通过公式:<br>$$<br>N!&#x3D;N*(N-1)!<br>$$<br>N为自然数大于等于0</p>\n<p>因为1！&#x3D;1，根据公式有:<br>$$<br>1!&#x3D;1*0!<br>$$<br>推出0！&#x3D;1，这样看似乎没有问题</p>\n<p>然而将N&#x3D;0再带入公式:<br>$$<br>0!&#x3D; 0*(-1)!<br>$$<br>左边等于1，右边由于0乘以任何数都为0的情况下那么右边为0,左右则矛盾冲突了，那么利用N!&#x3D;N*(N-1)!来推导0！就有一定的局限性。</p>\n<h4 id=\"非传递性骰子\"><a href=\"#非传递性骰子\" class=\"headerlink\" title=\"非传递性骰子\"></a>非传递性骰子</h4><p>对于上面的内容的话，都是一些比较纯数学公式的，但这一节的内容好像与我们的生活有那么一些关系的，说实话这一节真的有点出人意料的，让我有一种怀疑人生的感觉。现在有三颗骰子A B C，每颗骰子上面的数字并不是 1 2 3 4 5 6，而是一些特定的数字比如我们定义这样三个骰子，有六面，每一面有不同的数字，三个骰子的数字都不一样，如下图</p>\n<table>\n<thead>\n<tr>\n<th>骰子</th>\n<th>一</th>\n<th>二</th>\n<th>三</th>\n<th>四</th>\n<th>五</th>\n<th>六</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>A</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>12</td>\n<td>16</td>\n<td>17</td>\n</tr>\n<tr>\n<td>B</td>\n<td>5</td>\n<td>6</td>\n<td>7</td>\n<td>8</td>\n<td>9</td>\n<td>18</td>\n</tr>\n<tr>\n<td>C</td>\n<td>1</td>\n<td>10</td>\n<td>12</td>\n<td>13</td>\n<td>14</td>\n<td>15</td>\n</tr>\n</tbody></table>\n<p>如果让你选这三个骰子中的一个去参与“赌博”，你会选哪一个呢？对于A骰子和B骰子，通过列表格我们可以知道：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>12</th>\n<th>16</th>\n<th>17</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>5</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>A</td>\n<td>A</td>\n<td>A</td>\n</tr>\n<tr>\n<td>6</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>A</td>\n<td>A</td>\n<td>A</td>\n</tr>\n<tr>\n<td>7</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>A</td>\n<td>A</td>\n<td>A</td>\n</tr>\n<tr>\n<td>8</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>A</td>\n<td>A</td>\n<td>A</td>\n</tr>\n<tr>\n<td>9</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>A</td>\n<td>A</td>\n<td>A</td>\n</tr>\n<tr>\n<td>18</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n<td>B</td>\n</tr>\n</tbody></table>\n<p>可以知道A获胜的概率也就是 15&#x2F;36 约等于 42%，B赢的概率会是：58%。 那么你肯定会选择B，因为它赢的概率会大一点。我们用相同的手段处理骰子B和C得到的的数据：B赢的概率是 11&#x2F;36 约等于 31%，C赢的概率是25&#x2F;36约等于 百分之69。那么你肯定会选择骰子C。</p>\n<p>好像在这样的三个骰子里面，A“最差”，C“最好”，然而对于A和C，C赢的概率真的会高一些么？！如果你继续通过上面列表格的方式你会发现，A和C比较的话，A赢的概率是 21&#x2F;36约等于 58%，C赢的概率是15&#x2F;36约等于42%。</p>\n<p>相信你如果不是有对概率论有学习过的话，一上来肯定是不相信的，然而事实就是这样的。这是因为A与B、B与C、A与C相互之间的比较产生的<strong>基本事件空间</strong>是不一样的，比如A和B比较是(2,5)(2,6)等36个基本事件，A和C又是另外36个基本事件，所以这个概率大小也不具有传递性。</p>\n<h5 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h5><p>对于这本书，我本以为会介绍这个的方程：<br>$$<br>r &#x3D;a( 1 - sin θ)<br>$$<br>因为这个方程有一个美丽的图形，而方程背后又有一个美丽的故事，感觉内容太适合这本书了，不知道为什么没有加入进去。</p>\n<p>总之这本书大部分内容都是初等数学相关的知识，看起来并不是特别的费劲，但是很多平常有经常用过的数或者公式都有其深深的内涵所在，当你对其中的原理证明进行了相关的了解之后，你会发出感叹，原来数学是如此的有趣美丽。</p>\n","categories":[{"name":"读书电影","slug":"movie","api":"api/categories/movie.json"}],"tags":[{"name":"数学","slug":"数学","api":"api/tags/数学.json"}],"api":"api/posts/2020/07/25/《美丽的数学》-有趣的数学.json"},{"title":"《费马大定理》","slug":"《费马大定理》","date":"2020-06-09T14:32:00.000Z","updated":"2025-05-20T11:46:57.000Z","comments":true,"url":"2020/06/09/《费马大定理》/","excerpt":"<p>大约在1637年左右，法国学者费马在阅读丢番图《算术》拉丁文译本时，曾在第11卷第8命题旁写道：</p>\n<blockquote>\n<p>将一个立方数分成两个立方数之和，或一个四次幂分成两个四次幂之和，或者一般地将一个高于二次的幂分成两个同次幂之和，这是不可能的。关于此，我确信已发现了一种美妙的证法，可惜这里空白的地方太小，写不下。</p>\n</blockquote>\n<p>其中的条件用数学表达语言则：<br>$$<br>当整数n &gt;2时，关于x, y, z的方程 x^n + y^n &#x3D; z^n 没有正整数解。<br>$$</p>\n<p>这个数学理论简单明了，初中生都能看懂的理论，但是没有被得到最终的证明，费马自己提出来，没有得到完全的证明，他只证明了n&#x3D;4的情况，后来欧拉沿着费马“无穷递降法”的思路，再向前迈出小小的一步，将n&#x3D;4延伸到n&#x3D;3的情形。但是大于4的情况呢？</p>\n<p>费马的一段话，让数学界开始了长达300年的数学接力，有高斯、欧拉等诸多著名数学家都有尝试去彻底解决这个问题，但都无果。甚至后来开始推断出这是一个不能被证明的理论，在证明路上数学家们一直因证明失败而被打击，但这并不不能阻碍数学家们对这个问题的证明。最终，358年后，由英国数学家安德鲁.怀尔斯在1994成功完成了证明。看似轻描淡写，但有多少数学家在他证明的路上铺上了砖石呢？从费马提出到欧拉解决了n&#x3D;3的情况，中途诸多数学家的猜想与推论，最后谷山与志村提出的“谷山-志村猜想”，<strong>只要能证明“谷山-志村猜想”就能自动证明费马大定理</strong>。就这样，一个大问题被一点点地解决了，但时间长达300多年。</p>\n<p>《费马大定理》是是一部数学史，整本书以时间为基线，讲从费马提出这个问题开始，到最终怀尔斯完全证明费马大定理的过程。自己虽然对于数学没有很深入的了解，但是整本书看下来也是十分的吸引人，像我们熟知的毕达哥拉斯定理（勾股定理）与费马大定理联系起来（n&#x3D;2的情况是有正数解的），$\\sqrt{2}$ 是无理数的欧几里得证明等，就算对数学不太了解的人，也会为其中的证明技巧所感叹。</p>\n<p>当然本书中所有的数学家的故事都是一个振奋人心的角色，为证明费马大定理前赴后继，铸就了数学史诗，关于他们奋斗的故事，可以去仔细了解。除此之外，这本书给人最大的感触就是：<strong>站在巨人的肩膀上</strong>。</p>\n<p>如果说怀尔斯证明出来费马大定理是他一个人的功劳，那肯定很多人不会服了。如果说怀尔斯是站在了巨人的肩膀上，那么前面那么多的数学家共同组成了这个巨人。对于怀尔斯之前的谷山与志村则站在了“模形式”巨人上。对于怀尔斯证明完成之后，要直接使用费马大定理，那么怀尔斯又与前面那么多的数学家一起组成了更大的巨人。之后的数学学科利用费马大定理做一些更深入的研究后，那么这个巨人便变得更大了。</p>\n<p>为了证明费马大定理，产生了许多数学成果，拓宽了数学的领域，促进了数学的发展，数学家们将数学这个巨人变得越来越大。现代学科研究，利用数学，将物理学科的巨人变大，将计算机学科巨人变大……最终使整个科技巨人变大。而我们只需要站在巨人的肩膀上，只需要鼠标一点，这些巨人便开始奔跑。虽然说积跬步虽也能成千里，但远不如坐上高铁走四方，这便是站在巨人的肩膀上，而巨人是一代代人前赴后继的结果。</p>\n<p>最后补充一个：为什么费马大定理在数学史上的地位如此重要？<br>有人答道</p>\n<blockquote>\n<p>丢番图、毕达哥拉斯、费马、热尔曼、柯西、欧拉、希尔伯特、哥德尔、图灵、伽罗瓦、谷山丰、志村五郎、沃尔夫斯凯尔、怀尔斯……这些数学史上最伟大的名字，在整个「费马定理大戏」上轮番登场。他们有的奠定了数论基础、有的为提出费马定理铺平道路，有的提出问题却不给解答，有的人尝试了却失败，有的人只能证明部分结论，有的人没有想过证明这个定理却因为自己另一个数学理论创新而成为整个解答的关键，而这个解答却一度被学界不能理解而弃如敝履，有的人在攀登数学高峰的途中逝世，也有的人在面对人生失意决心自尽却因死前无聊看到了这个费马定理而心生兴趣尝试解答最后放弃自杀，设立巨额奖金奖励解答者！</p>\n</blockquote>\n<p>这是一部数学史诗，也是人类智慧最伟大的故事之一。</p>\n","cover":null,"images":[],"content":"<p>大约在1637年左右，法国学者费马在阅读丢番图《算术》拉丁文译本时，曾在第11卷第8命题旁写道：</p>\n<blockquote>\n<p>将一个立方数分成两个立方数之和，或一个四次幂分成两个四次幂之和，或者一般地将一个高于二次的幂分成两个同次幂之和，这是不可能的。关于此，我确信已发现了一种美妙的证法，可惜这里空白的地方太小，写不下。</p>\n</blockquote>\n<p>其中的条件用数学表达语言则：<br>$$<br>当整数n &gt;2时，关于x, y, z的方程 x^n + y^n &#x3D; z^n 没有正整数解。<br>$$</p>\n<p>这个数学理论简单明了，初中生都能看懂的理论，但是没有被得到最终的证明，费马自己提出来，没有得到完全的证明，他只证明了n&#x3D;4的情况，后来欧拉沿着费马“无穷递降法”的思路，再向前迈出小小的一步，将n&#x3D;4延伸到n&#x3D;3的情形。但是大于4的情况呢？</p>\n<p>费马的一段话，让数学界开始了长达300年的数学接力，有高斯、欧拉等诸多著名数学家都有尝试去彻底解决这个问题，但都无果。甚至后来开始推断出这是一个不能被证明的理论，在证明路上数学家们一直因证明失败而被打击，但这并不不能阻碍数学家们对这个问题的证明。最终，358年后，由英国数学家安德鲁.怀尔斯在1994成功完成了证明。看似轻描淡写，但有多少数学家在他证明的路上铺上了砖石呢？从费马提出到欧拉解决了n&#x3D;3的情况，中途诸多数学家的猜想与推论，最后谷山与志村提出的“谷山-志村猜想”，<strong>只要能证明“谷山-志村猜想”就能自动证明费马大定理</strong>。就这样，一个大问题被一点点地解决了，但时间长达300多年。</p>\n<p>《费马大定理》是是一部数学史，整本书以时间为基线，讲从费马提出这个问题开始，到最终怀尔斯完全证明费马大定理的过程。自己虽然对于数学没有很深入的了解，但是整本书看下来也是十分的吸引人，像我们熟知的毕达哥拉斯定理（勾股定理）与费马大定理联系起来（n&#x3D;2的情况是有正数解的），$\\sqrt{2}$ 是无理数的欧几里得证明等，就算对数学不太了解的人，也会为其中的证明技巧所感叹。</p>\n<p>当然本书中所有的数学家的故事都是一个振奋人心的角色，为证明费马大定理前赴后继，铸就了数学史诗，关于他们奋斗的故事，可以去仔细了解。除此之外，这本书给人最大的感触就是：<strong>站在巨人的肩膀上</strong>。</p>\n<p>如果说怀尔斯证明出来费马大定理是他一个人的功劳，那肯定很多人不会服了。如果说怀尔斯是站在了巨人的肩膀上，那么前面那么多的数学家共同组成了这个巨人。对于怀尔斯之前的谷山与志村则站在了“模形式”巨人上。对于怀尔斯证明完成之后，要直接使用费马大定理，那么怀尔斯又与前面那么多的数学家一起组成了更大的巨人。之后的数学学科利用费马大定理做一些更深入的研究后，那么这个巨人便变得更大了。</p>\n<p>为了证明费马大定理，产生了许多数学成果，拓宽了数学的领域，促进了数学的发展，数学家们将数学这个巨人变得越来越大。现代学科研究，利用数学，将物理学科的巨人变大，将计算机学科巨人变大……最终使整个科技巨人变大。而我们只需要站在巨人的肩膀上，只需要鼠标一点，这些巨人便开始奔跑。虽然说积跬步虽也能成千里，但远不如坐上高铁走四方，这便是站在巨人的肩膀上，而巨人是一代代人前赴后继的结果。</p>\n<p>最后补充一个：为什么费马大定理在数学史上的地位如此重要？<br>有人答道</p>\n<blockquote>\n<p>丢番图、毕达哥拉斯、费马、热尔曼、柯西、欧拉、希尔伯特、哥德尔、图灵、伽罗瓦、谷山丰、志村五郎、沃尔夫斯凯尔、怀尔斯……这些数学史上最伟大的名字，在整个「费马定理大戏」上轮番登场。他们有的奠定了数论基础、有的为提出费马定理铺平道路，有的提出问题却不给解答，有的人尝试了却失败，有的人只能证明部分结论，有的人没有想过证明这个定理却因为自己另一个数学理论创新而成为整个解答的关键，而这个解答却一度被学界不能理解而弃如敝履，有的人在攀登数学高峰的途中逝世，也有的人在面对人生失意决心自尽却因死前无聊看到了这个费马定理而心生兴趣尝试解答最后放弃自杀，设立巨额奖金奖励解答者！</p>\n</blockquote>\n<p>这是一部数学史诗，也是人类智慧最伟大的故事之一。</p>\n","categories":[{"name":"读书电影","slug":"movie","api":"api/categories/movie.json"}],"tags":[{"name":"数学","slug":"数学","api":"api/tags/数学.json"}],"api":"api/posts/2020/06/09/《费马大定理》.json"}],"info":{"type":"tag","name":"数学","slug":"数学"}},"api":"api/tags/数学/page.1.json"}