{"data":{"title":"逆向相关经验总结","slug":"逆向相关经验总结","description":"","date":"2021-07-06T06:47:00.000Z","updated":"2025-05-20T11:46:57.000Z","language":"zh-CN","comments":true,"url":"2021/07/06/逆向相关经验总结/","cover":null,"images":[],"content":"<p>在离开 YW 之前很长的一段时间都在做逆向相关，从最初只需要反编译 .apk 文件就能“摸清”应用内部相关逻辑，到后来需要对App文件进行脱壳，到需要动态调试。花了很大的精力，这中间也走了很多弯路。在换了工作之后，不知还会不会再有接触逆向相关的开发，但过去的探索也是我技术的宝贵经验吧，遂将此前的学习的一些经验进行整理。</p>\n<h2 id=\"逆向相关原理与流程参考资料\"><a href=\"#逆向相关原理与流程参考资料\" class=\"headerlink\" title=\"逆向相关原理与流程参考资料\"></a>逆向相关原理与流程参考资料</h2><p><a href=\"https://www.jianshu.com/p/d22f52a6a6fb\">安卓打包流程</a></p>\n<p><a href=\"https://julis.wang/2021/05/14/Android-%E9%80%86%E5%90%91-%E5%8F%8D%E7%BC%96%E8%AF%91/\">反编译流程</a></p>\n<p><a href=\"https://www.jianshu.com/p/4ff48b761ff6\">加固原理</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/70894166\">脱壳教程</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_36001685/article/details/102997126\">不root怎么将FDex2反编译的dex文件拷出来</a></p>\n<p><a href=\"https://blog.csdn.net/qq_22000459/article/details/90314255\">Xposed之Hook方法</a></p>\n<p><a href=\"https://juejin.cn/post/6844903762771853326\">Xposed Hook混淆且加固后的APP</a></p>\n<p><a href=\"https://github.com/CodingGay/BlackDex\">最方便快捷的脱壳软件（不需要Root、也不需要Xposed</a></p>\n<p>关于脱壳、破解逆向等资源工具最好的网站是—&gt;  <a href=\"www.52pojie.cn\">www.52pojie.cn</a></p>\n<p>整理一份相关破解工具集：<a href=\"https://github.com/VomPom/Hack/tree/master/apk_reverse\">https://github.com/VomPom/Hack/tree/master/apk_reverse</a></p>\n<h2 id=\"个人一些经验总结：\"><a href=\"#个人一些经验总结：\" class=\"headerlink\" title=\"个人一些经验总结：\"></a>个人一些经验总结：</h2><p>1、 App抓包尽量使用Android 低版本（Android 7以下）7之后有些新版本系统的安全限制</p>\n<p>2、 能进行静态代码就直接进行静态代码分析，在万不得已的时候再利用 hook以及动态调试（相关收益率以及成功率比较低）</p>\n<p>3、 利用BlackDex之类的软件脱壳之后，从手机复制过来到一个文件夹，利用apk2dex2jar2class2java.sh 执行 sh apk2dex2jar2class2java.sh &#x2F;xx&#x2F;xx (对应的脱壳后的dex文件夹) 得到jar&#x2F;java文件夹可方便进行静态代码分析</p>\n<p>4、 如何找到请求接口加解密的地方？这个只有靠个人经验，对于很多普通加密利用了标准加密库，可以尝试搜索“Cipher.getInstance”之类的标准代码（注意第三方相关sdk也会使用），或者搜搜“Response”相关的字段，或者 请求过程中相关的具体字段或者域名等，不过这部分代码一般都是被混淆的，需要耐心慢慢摸索。</p>\n<p>5、 有时候代码会有找不到相关的类的情况，这是由于脱壳相关机制导致的，需要对其进行修复，或者尝试使用其他脱壳软件进行脱壳。</p>\n","raw":"title: 逆向相关经验总结\nauthor: 落叶挽歌\ntags: []\ncategories: []\ndate: 2021-07-06 14:47:00\n---\n\n在离开 YW 之前很长的一段时间都在做逆向相关，从最初只需要反编译 .apk 文件就能“摸清”应用内部相关逻辑，到后来需要对App文件进行脱壳，到需要动态调试。花了很大的精力，这中间也走了很多弯路。在换了工作之后，不知还会不会再有接触逆向相关的开发，但过去的探索也是我技术的宝贵经验吧，遂将此前的学习的一些经验进行整理。\n\n## 逆向相关原理与流程参考资料\n\n[安卓打包流程](https://www.jianshu.com/p/d22f52a6a6fb)\n\n[反编译流程](https://julis.wang/2021/05/14/Android-%E9%80%86%E5%90%91-%E5%8F%8D%E7%BC%96%E8%AF%91/)\n\n[加固原理](https://www.jianshu.com/p/4ff48b761ff6)\n\n[脱壳教程](https://zhuanlan.zhihu.com/p/70894166)\n\n[不root怎么将FDex2反编译的dex文件拷出来](https://blog.csdn.net/weixin_36001685/article/details/102997126)\n\n[Xposed之Hook方法](https://blog.csdn.net/qq_22000459/article/details/90314255)\n\n[Xposed Hook混淆且加固后的APP](https://juejin.cn/post/6844903762771853326)\n\n[最方便快捷的脱壳软件（不需要Root、也不需要Xposed](https://github.com/CodingGay/BlackDex)\n\n\n关于脱壳、破解逆向等资源工具最好的网站是--->  [www.52pojie.cn](www.52pojie.cn)\n\n整理一份相关破解工具集：[https://github.com/VomPom/Hack/tree/master/apk_reverse](https://github.com/VomPom/Hack/tree/master/apk_reverse)\n\n## 个人一些经验总结：\n1、 App抓包尽量使用Android 低版本（Android 7以下）7之后有些新版本系统的安全限制\n\n2、 能进行静态代码就直接进行静态代码分析，在万不得已的时候再利用 hook以及动态调试（相关收益率以及成功率比较低）\n\n3、 利用BlackDex之类的软件脱壳之后，从手机复制过来到一个文件夹，利用apk2dex2jar2class2java.sh 执行 sh apk2dex2jar2class2java.sh /xx/xx (对应的脱壳后的dex文件夹) 得到jar/java文件夹可方便进行静态代码分析\n\n4、 如何找到请求接口加解密的地方？这个只有靠个人经验，对于很多普通加密利用了标准加密库，可以尝试搜索“Cipher.getInstance”之类的标准代码（注意第三方相关sdk也会使用），或者搜搜“Response”相关的字段，或者 请求过程中相关的具体字段或者域名等，不过这部分代码一般都是被混淆的，需要耐心慢慢摸索。\n\n5、 有时候代码会有找不到相关的类的情况，这是由于脱壳相关机制导致的，需要对其进行修复，或者尝试使用其他脱壳软件进行脱壳。","categories":[],"tags":[]},"api":"api/posts/2021/07/06/逆向相关经验总结.json"}