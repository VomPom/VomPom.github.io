{"data":{"index":1,"total":1,"posts":[{"title":"快捷-Mac桌面adb push小工具","slug":"快捷-Mac桌面adb-push小工具","date":"2022-01-15T15:43:00.000Z","updated":"2025-05-20T11:46:57.000Z","comments":true,"url":"2022/01/15/快捷-Mac桌面adb-push小工具/","excerpt":"<p>最近在Android开发过程中会遇到很多传文件的操作，市面上也有比较多的“文件管理器”，例如锤子的HandShaker，或者谷歌官方的<a href=\"https://www.android.com/filetransfer/\">filetransfer</a>,但他们都需要打开“传输文件”这个行为，个人感觉比较繁琐。作为Android开发，使用adb命令行去传输文件是不错的，但每次输入<code>adb push xxx</code>还是挺麻烦，而且必须打开 Terminal 才能运行。为了让所有操作更简化，我做了一个简单的桌面工具，只需要连上手机，正常打开adb，拖到文件到对应区域，则可以实现文件传输。</p>\n<h2 id=\"Macos-Adb-Helper\"><a href=\"#Macos-Adb-Helper\" class=\"headerlink\" title=\"Macos Adb Helper\"></a>Macos Adb Helper</h2><p>由于自己主要是从事Android相关的开发，对于Mac桌面端的开发不太熟悉，但是 Flutter 这个神奇的跨平台框架可以让你稍微消除这个平衡。</p>\n<p>实现一键拖拽文件发送到Android手机，主要需要实现的功能有两个：</p>\n<p>1、文件拖动功能</p>\n<p>2、发送功能</p>\n<h3 id=\"文件拖动功能\"><a href=\"#文件拖动功能\" class=\"headerlink\" title=\"文件拖动功能\"></a>文件拖动功能</h3><p>拖动功能也不需要自己去写，已经有现成的库 <a href=\"https://pub.dev/packages/desktop_drop\">desktop_drop</a> 实现好了该功能。看了下源码与大多数 plugin 一样，通过methed channel进行mac os进行通信，对桌面开发相关Api不太熟，实现原理没有太深究。</p>\n<h3 id=\"发送功能\"><a href=\"#发送功能\" class=\"headerlink\" title=\"发送功能\"></a>发送功能</h3><p>发送功能主要使用 adb 功能提供的 push命令实现。不过要在 Flutter 上面实现执行命令的功能还是比较简单，只要使用 <code>Process.start(&#39;adb&#39;, [&#39;push&#39;, ...])</code>即可，但是中间会遇到权限不足的问题，报错：<code>ProcessException (ProcessException: Operation not permitted)</code><br>需要关闭沙盒权限才行，将<code>com.apple.security.app-sandbox</code>之设为<code>false</code>。 那咱们这个程序就不太安全咯?不知道还有没有更好的办法?个人感觉不大行……</p>\n<p>在这里还遇到个比较蛋疼的问题，对于实现大文件的发送，通常时间比较久，使用<code>Process.start</code>没有找到相关的api能够直接拿到进度，不过也就简单实用，问题不大 ^_^#。</p>\n<p>效果展示</p>\n<img src=\"https://cdn.julis.wang/blog/img/mac_adb_helper.gif\">\n\n<p>项目地址：<a href=\"https://github.com/VomPom/macos_adb_helper\">macos_adb_helper</a></p>\n","cover":null,"images":["https://cdn.julis.wang/blog/img/mac_adb_helper.gif"],"content":"<p>最近在Android开发过程中会遇到很多传文件的操作，市面上也有比较多的“文件管理器”，例如锤子的HandShaker，或者谷歌官方的<a href=\"https://www.android.com/filetransfer/\">filetransfer</a>,但他们都需要打开“传输文件”这个行为，个人感觉比较繁琐。作为Android开发，使用adb命令行去传输文件是不错的，但每次输入<code>adb push xxx</code>还是挺麻烦，而且必须打开 Terminal 才能运行。为了让所有操作更简化，我做了一个简单的桌面工具，只需要连上手机，正常打开adb，拖到文件到对应区域，则可以实现文件传输。</p>\n<h2 id=\"Macos-Adb-Helper\"><a href=\"#Macos-Adb-Helper\" class=\"headerlink\" title=\"Macos Adb Helper\"></a>Macos Adb Helper</h2><p>由于自己主要是从事Android相关的开发，对于Mac桌面端的开发不太熟悉，但是 Flutter 这个神奇的跨平台框架可以让你稍微消除这个平衡。</p>\n<p>实现一键拖拽文件发送到Android手机，主要需要实现的功能有两个：</p>\n<p>1、文件拖动功能</p>\n<p>2、发送功能</p>\n<h3 id=\"文件拖动功能\"><a href=\"#文件拖动功能\" class=\"headerlink\" title=\"文件拖动功能\"></a>文件拖动功能</h3><p>拖动功能也不需要自己去写，已经有现成的库 <a href=\"https://pub.dev/packages/desktop_drop\">desktop_drop</a> 实现好了该功能。看了下源码与大多数 plugin 一样，通过methed channel进行mac os进行通信，对桌面开发相关Api不太熟，实现原理没有太深究。</p>\n<h3 id=\"发送功能\"><a href=\"#发送功能\" class=\"headerlink\" title=\"发送功能\"></a>发送功能</h3><p>发送功能主要使用 adb 功能提供的 push命令实现。不过要在 Flutter 上面实现执行命令的功能还是比较简单，只要使用 <code>Process.start(&#39;adb&#39;, [&#39;push&#39;, ...])</code>即可，但是中间会遇到权限不足的问题，报错：<code>ProcessException (ProcessException: Operation not permitted)</code><br>需要关闭沙盒权限才行，将<code>com.apple.security.app-sandbox</code>之设为<code>false</code>。 那咱们这个程序就不太安全咯?不知道还有没有更好的办法?个人感觉不大行……</p>\n<p>在这里还遇到个比较蛋疼的问题，对于实现大文件的发送，通常时间比较久，使用<code>Process.start</code>没有找到相关的api能够直接拿到进度，不过也就简单实用，问题不大 ^_^#。</p>\n<p>效果展示</p>\n<img src=\"https://cdn.julis.wang/blog/img/mac_adb_helper.gif\">\n\n<p>项目地址：<a href=\"https://github.com/VomPom/macos_adb_helper\">macos_adb_helper</a></p>\n","categories":[{"name":"思考总结","slug":"thinking","api":"api/categories/thinking.json"}],"tags":[{"name":"flutter","slug":"flutter","api":"api/tags/flutter.json"},{"name":"mac","slug":"mac","api":"api/tags/mac.json"},{"name":"工具","slug":"工具","api":"api/tags/工具.json"}],"api":"api/posts/2022/01/15/快捷-Mac桌面adb-push小工具.json"}],"info":{"type":"archive","year":2022,"month":1}},"api":"api/archives/2022/01/page.1.json"}